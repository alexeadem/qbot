#!/usr/bin/env bash

# redpanda
# https://docs.redpanda.com/current/deploy/deployment-option/self-hosted/kubernetes/local-guide/

#################################
# include -=qbot=-
# you can pass command line args
#
# example:
# to disable simulated typing
# . ../qbot.sh -d
#
# pass -h to see all options
#################################
shopt -s expand_aliases
. ../qbot.sh

bold_green_prefix="\033[1;32m"
bold_green_suffix="\033[0m"

KUBECTL=/usr/bin/kubectl
DOCKER=/usr/bin/docker
CURL=/usr/bin/curl

DB_NAME=moose

if type getent > /dev/null 2>&1; then
    g=$(getent group docker | awk -F ':' '{print $3}')
else
    g=$(cat /etc/group | grep docker: | awk -F ':' '{print $3}')
fi

########################
# Configure the options
########################
#
# speed at which to simulate typing. bigger num = faster
#
TYPE_SPEED=20

DEMO=$(basename "$PWD")
if [ -z $DEMO ]; then
    echo "$0 {name}"
    exit 1
fi

pb() {
    local w=80 p=$1;  shift
    # create a string of spaces, then change them to dots
    printf -v dots "%*s" "$(($p))" " "; dots=${dots// /▇};
    printf "\r\e[K %3d s | %-*s"  "$p" "$*" "$dots" ;
}


DEMO=$(basename "$PWD")
DEMO_PROMPT="\e[0;38;5;250;48;5;235;1m  ☐ \e[0;38;5;235;48;5;240;22m \e[0;38;5;231;48;5;240mqbot \e[0;38;5;240;48;5;235;1m\e[0;38;5;250;48;5;235;1m $DEMO \e[0;38;5;235;1m \e[0m"

# hide the evidence
# clear # requires ncurses-bin
printf "\033c"

CLI_IMAGE=levitas/cli:latest
if [ -f /.dockerenv ]; then
    alias qbo=cli
else
    alias qbo="docker run --rm --name qbo-cli -e QBO_HOST=$QBO_HOST -e QBO_PORT=$QBO_PORT -e QBO_UID=$QBO_UID -e QBO_AUX=$QBO_AUX --network host -i -v ~/.qbo:/tmp/qbo $CLI_IMAGE cli"
fi

# qbo configuraton
NAME=redpanda
pe "qbo version | jq .version[]?"

C=$(qbo get cluster $NAME | jq -e '.clusters[]?')
if [ -z "$C" ]; then
        pe "qbo add cluster $NAME -n 3 -i hub.docker.com/kindest/node:v1.32.0 | jq"
else
        echo $C | jq
fi
pe "qbo get nodes $NAME | jq .nodes[]?"

V=$(qbo version | jq -r '.version[]?.qbo | select( . != null)')
CE="api-.*:ce-"
if [[ "$V" =~ $CE ]]; then
    V="ce"
else
    V="cloud"
fi
if [ "$V" = "ce" ]; then
    pe "export KUBECONFIG=/tmp/qbo/$NAME.conf"
else
    #:  
    pe "qbo get cluster $NAME -k | jq -r '.output[]?.kubeconfig | select( . != null)' > $HOME/.qbo/$NAME.conf"
    pe "export KUBECONFIG=$HOME/.qbo/$NAME.conf"
fi

pe "$KUBECTL get nodes"


if ! command -v rpk &> /dev/null
then
	pe "cd ~"
	pe "curl -LO https://github.com/redpanda-data/redpanda/releases/latest/download/rpk-linux-amd64.zip"
	pe "mkdir -p ~/.local/bin"
	pe "unzip rpk-linux-amd64.zip -d ~/.local/bin/"
	pe "export PATH=\"~/.local/bin:$PATH\""
else
	export PATH="~/.local/bin:$PATH"
fi

LB=$(kubectl get svc redpanda-external -n redpanda --ignore-not-found -o json | jq -r '.spec.externalIPs[0] | select ( . != null)')
pe "kubectl --namespace redpanda get secret redpanda-external-root-certificate -o go-template='{{ index .data \"ca.crt\" | base64decode }}' > ca.crt"
CA=$(cat ca.crt)

PROFILE_NAME="eadem"

# Check if the profile already exists
if rpk profile list | grep -q "$PROFILE_NAME"; then
  # Delete the existing profile
  rpk profile delete "$PROFILE_NAME"
fi

PROFILE=$(kubectl get configmap --namespace redpanda redpanda-rpk -o go-template='{{ .data.profile }}' | sed 's/31092/9094/g')
rpk profile create --from-profile <(echo "$PROFILE") eadem

cat $HOME/.config/rpk/rpk.yaml

DNS="$LB redpanda-0.cloud.eadem.com
$LB redpanda-1.cloud.eadem.com
$LB redpanda-2.cloud.eadem.com"

{
  grep -v "redpanda-[0-9]\.cloud\.eadem\.com" /etc/hosts
  echo "$DNS"
} | sudo tee /etc/hosts > /dev/null

cat /etc/hosts | grep -v "redpanda-[0-9]\.cloud\.eadem\.com" 

qbo get ipvs -A | jq -r '.ipvs[]? | "sudo ip route add \(.vip) via \(.rip | sub("\\.[0-9]+$"; ".2"))"' | sort | uniq |  while read -r cmd; do $cmd; done

pe "rpk cluster info -X user=superuser -X pass=secretpassword -X sasl.mechanism=SCRAM-SHA-512"

echo 
printf "\033[1m%-8s\033[0m %-22s\n" "BROKER-0" "redpanda-0.cloud.eadem.com"
printf "\033[1m%-8s\033[0m %-22s\n" "BROKER-1" "redpanda-1.cloud.eadem.com"
printf "\033[1m%-8s\033[0m %-22s\n" "BROKER-2" "redpanda-2.cloud.eadem.com"
printf "\033[1m%-8s\033[0m %-22s\n" "ADDRESS" "$LB"
printf "\033[1m%-8s\033[0m %-22s\n" "PORT" "9094"
printf "\033[1m%-8s\033[0m %-22s\n" "USER" "superuser"
printf "\033[1m%-8s\033[0m %-22s\n" "PASSWORD" "secretpassword"
printf "\033[1m%-8s\033[0m %-22s\n" "SASL" "SCRAM-SHA-512"
printf "\033[1m%-8s\033[0m %-22s\n" "CA" "$CA"




# show a prompt so as not to reveal our true nature after
# the demo has concluded
p ""

