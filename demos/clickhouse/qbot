#!/usr/bin/env bash

# clickhouse
# https://clickhouse.com/docs/en/integrations/sql-clients/cli
# https://github.com/Altinity/clickhouse-operator/blob/master/docs/quick_start.md

#################################
# include -=qbot=-
# you can pass command line args
#
# example:
# to disable simulated typing
# . ../qbot.sh -d
#
# pass -h to see all options
#################################
shopt -s expand_aliases
. ../qbot.sh

bold_green_prefix="\033[1;32m"
bold_green_suffix="\033[0m"

KUBECTL=/usr/bin/kubectl
DOCKER=/usr/bin/docker
CURL=/usr/bin/curl

DB_NAME=moose

if type getent > /dev/null 2>&1; then
    g=$(getent group docker | awk -F ':' '{print $3}')
else
    g=$(cat /etc/group | grep docker: | awk -F ':' '{print $3}')
fi

########################
# Configure the options
########################
#
# speed at which to simulate typing. bigger num = faster
#
TYPE_SPEED=20

DEMO=$(basename "$PWD")
if [ -z $DEMO ]; then
    echo "$0 {name}"
    exit 1
fi

pb() {
    local w=80 p=$1;  shift
    # create a string of spaces, then change them to dots
    printf -v dots "%*s" "$(($p))" " "; dots=${dots// /▇};
    printf "\r\e[K %3d s | %-*s"  "$p" "$*" "$dots" ;
}


DEMO=$(basename "$PWD")
DEMO_PROMPT="\e[0;38;5;250;48;5;235;1m  ☐ \e[0;38;5;235;48;5;240;22m \e[0;38;5;231;48;5;240mqbot \e[0;38;5;240;48;5;235;1m\e[0;38;5;250;48;5;235;1m $DEMO \e[0;38;5;235;1m \e[0m"

# hide the evidence
# clear # requires ncurses-bin
printf "\033c"

CLI_IMAGE=levitas/cli:latest
if [ -f /.dockerenv ]; then
    alias qbo=cli
else
    alias qbo="docker run --rm --name qbo-cli -e QBO_HOST=$QBO_HOST -e QBO_PORT=$QBO_PORT -e QBO_UID=$QBO_UID -e QBO_AUX=$QBO_AUX --network host -i -v ~/.qbo:/tmp/qbo $CLI_IMAGE cli"
fi

# qbo configuraton
NAME=clickhouse
pe "qbo version | jq .version[]?"

C=$(qbo get cluster $NAME | jq -e '.clusters[]?')
if [ -z "$C" ]; then
        pe "qbo add cluster $NAME -i hub.docker.com/kindest/node:v1.32.0 | jq"
else
        echo $C | jq
fi
pe "qbo get nodes $NAME | jq .nodes[]?"

V=$(qbo version | jq -r '.version[]?.qbo | select( . != null)')
CE="api-.*:ce-"
if [[ "$V" =~ $CE ]]; then
    V="ce"
else
    V="cloud"
fi
if [ "$V" = "ce" ]; then
    pe "export KUBECONFIG=/tmp/qbo/$NAME.conf"
else
    #:  
    pe "qbo get cluster $NAME -k | jq -r '.output[]?.kubeconfig | select( . != null)' > $HOME/.qbo/$NAME.conf"
    pe "export KUBECONFIG=$HOME/.qbo/$NAME.conf"
fi

pe "$KUBECTL get nodes"
pe "kubectl apply -f https://raw.githubusercontent.com/Altinity/clickhouse-operator/master/deploy/operator/clickhouse-operator-install-bundle.yaml"
#pe "kubectl create namespace test-clickhouse-operator"
pe "cat simple-01-crd.yaml"
pe "kubectl apply -f simple-01-crd.yaml"

LB=""
i=0
while true
    do
      LB=$(kubectl get svc chendpoint-simple-01 --ignore-not-found -o json | jq -r '.spec.externalIPs[0] | select ( . != null)')
      if [ ! -z "$LB" ]; then
         echo
	 printf "\033[1m%-8s\033[0m %-22s\n" "LB" "$LB"
	 cd $HOME
	 #qbo get ipvs -A | jq -r '.ipvs[]? | "sudo ip route add \(.vip) via \(.rip | sub("\\.[0-9]+$"; ".2"))"' | sort | uniq |  while read -r cmd; do $cmd; done
	 if [ ! -f $HOME/clickhouse ]; then
         	curl https://clickhouse.com/ | sh
	 fi
	 i=0
         while ! $HOME/clickhouse client -h $LB -u test_user --password test_password  --port 9000 --query "SELECT 1" > /dev/null 2>&1; do
	 	pb $i
		sleep 1
         	((i++))
	 done         
         pe "$HOME/clickhouse client -h $LB -u test_user --password test_password"
      	 break
      else 
        pb $i
      fi
      sleep 1
      ((i++))
done
pe "kubectl get pv"
pe "$HOME/clickhouse client -h $LB -u test_user --password test_password --port 9000 --query \"CREATE DATABASE IF NOT EXISTS $DB_NAME;\""
pe "$HOME/clickhouse client -h $LB -u test_user --password test_password --port 9000 --query \"SHOW DATABASES;\""
echo 
printf "\033[1m%-8s\033[0m %-22s\n" "DATABASE" "$DB_NAME"
printf "\033[1m%-8s\033[0m %-22s\n" "USER" "test_user"
printf "\033[1m%-8s\033[0m %-22s\n" "PASSWORD" "test_password"
printf "\033[1m%-8s\033[0m %-22s\n" "ADDRESS" "$LB"
printf "\033[1m%-8s\033[0m %-22s\n" "PORT" "9000"





# show a prompt so as not to reveal our true nature after
# the demo has concluded
p ""

